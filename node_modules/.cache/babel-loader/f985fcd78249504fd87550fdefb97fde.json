{"ast":null,"code":"var _jsxFileName = \"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/HabitoHoje.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HabitoHoje(props) {\n  _s();\n\n  const {\n    habito,\n    ContagemAtual,\n    ContagemRecorde,\n    id\n  } = props;\n  const {\n    token,\n    setToken\n  } = useContext(UserContext);\n  const config = {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  };\n\n  function toggle() {\n    setIconeSelecionado(!iconeSelecionado);\n    console.log(iconeSelecionado);\n    console.log(\"Entrar no if\");\n\n    if (iconeSelecionado === true) {\n      console.log(\"Marcar hábito como concluido\");\n      const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/check`, config);\n      promise.then(response => {\n        const {\n          data\n        } = response;\n        console.log(data);\n        console.log(\"Deu bom para marcar hábito\");\n      });\n      promise.catch(response => console.log(response));\n    } else {\n      console.log(\"Remover hábito da lista\");\n      const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/uncheck`, config);\n      promise.then(response => {\n        const {\n          data\n        } = response;\n        console.log(data);\n        console.log(\"Deu bom para desmarcar hábito\");\n      });\n      promise.catch(response => console.log(response));\n    }\n  } // Estado usado para mudar a cor do icone ao ser clicado\n\n\n  const [iconeSelecionado, setIconeSelecionado] = useState(true);\n  const [atual, SetAtual] = useState(ContagemAtual);\n  const [recorde, SetRecorde] = useState(ContagemRecorde);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: habito\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sequ\\xEAncia Atual: \", atual, \" dias\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Seu recorde: \", recorde, \" dias \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      onClick: () => toggle(),\n      selecionado: iconeSelecionado,\n      children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n        name: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HabitoHoje, \"MjsosMFw2ikl33yjrW669wCH3/I=\");\n\n_c = HabitoHoje;\n\nfunction corIcone(selecionado) {\n  /* Por algum motivo esse selecionado está invertido em relação ao estado\n  por isso coloquei o not nele */\n  if (!selecionado) return \"green\";else return \"gray\";\n}\n\nconst Container = styled.div`\n    width: 340px;\n    height: 91px;\n    border-radius: 5px;\n    border: 1px solid black;\n    display: flex;\n    justify-content: space-between;\n    margin: 10px 0;\n    padding-left: 10px;\n    background-color: #FFFFFF;\n\n    h1 {\n        margin: 10px 0;\n    }\n`;\n_c2 = Container;\nconst Icon = styled.button`\n    font-size: 25px;\n    background-color: white;\n    border: none;\n    color: ${props => corIcone(props.selecionado)};\n`;\n_c3 = Icon;\nexport default HabitoHoje;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HabitoHoje\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Icon\");","map":{"version":3,"sources":["/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/HabitoHoje.js"],"names":["useState","useContext","UserContext","axios","styled","HabitoHoje","props","habito","ContagemAtual","ContagemRecorde","id","token","setToken","config","headers","toggle","setIconeSelecionado","iconeSelecionado","console","log","promise","post","then","response","data","catch","atual","SetAtual","recorde","SetRecorde","corIcone","selecionado","Container","div","Icon","button"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\n\nimport styled from \"styled-components\";\n\nfunction HabitoHoje(props) {\n\n    const { habito, ContagemAtual, ContagemRecorde, id } = props;\n\n    const { token, setToken } = useContext(UserContext);\n\n    const config = {\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    }\n\n    function toggle () {\n        setIconeSelecionado(!iconeSelecionado);\n        console.log(iconeSelecionado);\n        console.log(\"Entrar no if\");\n        if (iconeSelecionado === true) {\n            console.log(\"Marcar hábito como concluido\");\n            const promise = axios.post(\n            `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/check`,\n            config)\n            promise.then(response => {\n                const {data} = response;\n                console.log(data);\n                console.log(\"Deu bom para marcar hábito\");\n            })\n            promise.catch(response => console.log(response));\n        }\n        else {\n            console.log(\"Remover hábito da lista\");\n            const promise = axios.post(\n                `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/uncheck`,\n                config)\n                promise.then(response => {\n                    const {data} = response;\n                    console.log(data);\n                    console.log(\"Deu bom para desmarcar hábito\");\n                })\n                promise.catch(response => console.log(response));\n        }\n    }\n\n\n    // Estado usado para mudar a cor do icone ao ser clicado\n    const [iconeSelecionado, setIconeSelecionado] = useState(true);\n\n    const [atual, SetAtual] = useState(ContagemAtual);\n    const [recorde, SetRecorde] = useState(ContagemRecorde);\n\n    return (\n        <Container>\n            <div>\n                <h1>{habito}</h1>\n                <p>Sequência Atual: {atual} dias</p>\n                <p>Seu recorde: {recorde} dias </p>\n            </div>\n            <Icon onClick={() => toggle()} selecionado={iconeSelecionado}>\n                <ion-icon name=\"checkbox\"></ion-icon>\n            </Icon>\n        </Container>\n    )\n}\n\n\nfunction corIcone (selecionado) {\n    /* Por algum motivo esse selecionado está invertido em relação ao estado\n    por isso coloquei o not nele */\n    if (!selecionado) return \"green\";\n    else return \"gray\";\n}\n\nconst Container = styled.div`\n    width: 340px;\n    height: 91px;\n    border-radius: 5px;\n    border: 1px solid black;\n    display: flex;\n    justify-content: space-between;\n    margin: 10px 0;\n    padding-left: 10px;\n    background-color: #FFFFFF;\n\n    h1 {\n        margin: 10px 0;\n    }\n`\n\n\nconst Icon = styled.button`\n    font-size: 25px;\n    background-color: white;\n    border: none;\n    color: ${(props) => corIcone(props.selecionado)};\n`\n\n\n\n\nexport default HabitoHoje"]},"metadata":{},"sourceType":"module"}