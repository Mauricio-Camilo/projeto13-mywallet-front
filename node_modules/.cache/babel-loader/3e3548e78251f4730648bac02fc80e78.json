{"ast":null,"code":"var _jsxFileName = \"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/HabitoHoje.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HabitoHoje(props) {\n  _s();\n\n  const {\n    habito,\n    contagemAtual,\n    contagemRecorde,\n    id,\n    porcentagem\n  } = props;\n  const {\n    token,\n    setToken\n  } = useContext(UserContext);\n  const config = {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  };\n\n  function marcarHabito() {\n    SetAtual(atual + 1);\n    console.log(\"Marcar hábito como concluido\");\n    const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/check`, {}, config);\n    promise.then(response => {\n      const {\n        data\n      } = response;\n      console.log(data);\n      console.log(\"Deu bom para marcar hábito\");\n    });\n    promise.catch(err => console.log(err.response.statusText));\n  }\n\n  function desmarcarHabito() {\n    SetAtual(atual - 1);\n    console.log(\"Remover hábito da lista\");\n    const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/uncheck`, {}, config);\n    promise.then(response => {\n      const {\n        data\n      } = response;\n      console.log(data);\n      console.log(\"Deu bom para desmarcar hábito\");\n    });\n    promise.catch(err => console.log(err.response.statusText));\n  }\n\n  function toggle() {\n    setIconeSelecionado(!iconeSelecionado); // console.log(iconeSelecionado);\n\n    console.log(\"Entrar no if\");\n    if (iconeSelecionado === true) marcarHabito();else desmarcarHabito();\n  } // Estado usado para mudar a cor do icone ao ser clicado\n\n\n  const [iconeSelecionado, setIconeSelecionado] = useState(true);\n  const [atual, SetAtual] = useState(contagemAtual);\n  const [recorde, SetRecorde] = useState(contagemRecorde);\n  /* Estado criado apenas para testar a lógica, modificar depois o\n  código colocando o estado de cima, recorde, que pega os dados da API */\n\n  const [aux, setAux] = useState(1);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: habito\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Atual, {\n        selecionado: iconeSelecionado,\n        children: [\"Sequ\\xEAncia Atual: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", atual, atual === 1 ? \" dia\" : \" dias\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Recorde, {\n        atual: atual,\n        recorde: aux,\n        children: [\"Seu recorde: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", aux, aux === 1 ? \" dia\" : \" dias\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      onClick: () => toggle(),\n      selecionado: iconeSelecionado,\n      children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n        name: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HabitoHoje, \"8hu62IBQ+4mBCBtf1neLpVDgYRw=\");\n\n_c = HabitoHoje;\n\nfunction corIcone(selecionado) {\n  /* Por algum motivo esse selecionado está invertido em relação ao estado\n  por isso coloquei o not nele */\n  if (!selecionado) return \"blue\";else return \"gray\";\n}\n\nfunction corAtual(selecionado) {\n  if (!selecionado) return \"blue\";else return \"black\";\n}\n\nfunction corRecorde(atual, recorde) {\n  if (atual < recorde) return \"black\";else return \"blue\";\n}\n\nconst Container = styled.div`\n    width: 340px;\n    height: 91px;\n    border-radius: 5px;\n    border: 1px solid black;\n    display: flex;\n    justify-content: space-between;\n    margin: 10px 0;\n    padding-left: 10px;\n    background-color: #FFFFFF;\n\n    h1 {\n        margin: 10px 0;\n    }\n`;\n_c2 = Container;\nconst Atual = styled.p`\n    span {\n        color: ${props => corAtual(props.selecionado)};\n`;\n_c3 = Atual;\nconst Recorde = styled.p`\n    span {\n        color: ${props => corRecorde(props.atual, props.recorde)};\n`;\n_c4 = Recorde;\nconst Icon = styled.button`\n    font-size: 25px;\n    background-color: white;\n    border: none;\n    color: ${props => corIcone(props.selecionado)};\n`;\n_c5 = Icon;\nexport default HabitoHoje;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"HabitoHoje\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Atual\");\n$RefreshReg$(_c4, \"Recorde\");\n$RefreshReg$(_c5, \"Icon\");","map":{"version":3,"sources":["/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/HabitoHoje.js"],"names":["useState","useContext","UserContext","axios","styled","HabitoHoje","props","habito","contagemAtual","contagemRecorde","id","porcentagem","token","setToken","config","headers","marcarHabito","SetAtual","atual","console","log","promise","post","then","response","data","catch","err","statusText","desmarcarHabito","toggle","setIconeSelecionado","iconeSelecionado","recorde","SetRecorde","aux","setAux","corIcone","selecionado","corAtual","corRecorde","Container","div","Atual","p","Recorde","Icon","button"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\n\nimport styled from \"styled-components\";\n\nfunction HabitoHoje(props) {\n\n    const { habito, contagemAtual, contagemRecorde, id, porcentagem } = props;\n\n    const { token, setToken } = useContext(UserContext);\n\n    const config = {\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    }\n\n    function marcarHabito () {\n        SetAtual(atual+1)\n        console.log(\"Marcar hábito como concluido\");\n            const promise = axios.post(\n            `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/check`,\n            {},config)\n            promise.then(response => {\n                const {data} = response;\n                console.log(data);\n                console.log(\"Deu bom para marcar hábito\");\n            })\n            promise.catch(err => console.log(err.response.statusText));\n    }\n\n    function desmarcarHabito () {\n        SetAtual(atual-1)\n        console.log(\"Remover hábito da lista\");\n        const promise = axios.post(\n            `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/uncheck`,\n            {},config)\n            promise.then(response => {\n                const {data} = response;\n                console.log(data);\n                console.log(\"Deu bom para desmarcar hábito\");\n            })\n            promise.catch(err => console.log(err.response.statusText));\n    }\n\n    function toggle () {\n        setIconeSelecionado(!iconeSelecionado);\n        // console.log(iconeSelecionado);\n        console.log(\"Entrar no if\");\n        if (iconeSelecionado === true) marcarHabito();\n        else desmarcarHabito();\n    }\n\n\n    // Estado usado para mudar a cor do icone ao ser clicado\n    const [iconeSelecionado, setIconeSelecionado] = useState(true);\n\n    const [atual, SetAtual] = useState(contagemAtual);\n    const [recorde, SetRecorde] = useState(contagemRecorde);\n\n    /* Estado criado apenas para testar a lógica, modificar depois o\n    código colocando o estado de cima, recorde, que pega os dados da API */\n    const [aux, setAux] = useState(1);\n\n    return (\n        <Container>\n            <div>\n                <h1>{habito}</h1>\n                <Atual selecionado={iconeSelecionado}> \n                Sequência Atual: <span> {atual} \n                {atual === 1? \" dia\" : \" dias\"} \n                </span> \n                </Atual>\n                <Recorde atual={atual} recorde={aux}> \n                Seu recorde: <span> {aux} \n                {aux === 1? \" dia\" : \" dias\"} \n                </span> \n                </Recorde>\n            </div>\n            <Icon onClick={() => toggle()} selecionado={iconeSelecionado}>\n                <ion-icon name=\"checkbox\"></ion-icon>\n            </Icon>\n        </Container>\n    )\n}\n\nfunction corIcone (selecionado) {\n    /* Por algum motivo esse selecionado está invertido em relação ao estado\n    por isso coloquei o not nele */\n    if (!selecionado) return \"blue\";\n    else return \"gray\";\n}\n\nfunction corAtual (selecionado) {\n    if (!selecionado) return \"blue\";\n    else return \"black\";\n}\n\nfunction corRecorde (atual, recorde) {\n    if (atual < recorde) return \"black\"\n    else return \"blue\"\n}\n\nconst Container = styled.div`\n    width: 340px;\n    height: 91px;\n    border-radius: 5px;\n    border: 1px solid black;\n    display: flex;\n    justify-content: space-between;\n    margin: 10px 0;\n    padding-left: 10px;\n    background-color: #FFFFFF;\n\n    h1 {\n        margin: 10px 0;\n    }\n`\nconst Atual = styled.p`\n    span {\n        color: ${(props) => corAtual(props.selecionado)};\n`\nconst Recorde = styled.p`\n    span {\n        color: ${(props) => corRecorde(props.atual, props.recorde)};\n`\n\nconst Icon = styled.button`\n    font-size: 25px;\n    background-color: white;\n    border: none;\n    color: ${(props) => corIcone(props.selecionado)};\n`\n\n\n\n\nexport default HabitoHoje"]},"metadata":{},"sourceType":"module"}