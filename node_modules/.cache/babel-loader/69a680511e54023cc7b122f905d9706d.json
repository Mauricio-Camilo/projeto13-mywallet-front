{"ast":null,"code":"var _jsxFileName = \"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/InserirHabito.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InserirHabito() {\n  _s();\n\n  const dias = [{\n    dia: \"D\",\n    id: 0\n  }, {\n    dia: \"S\",\n    id: 1\n  }, {\n    dia: \"T\",\n    id: 2\n  }, {\n    dia: \"Q\",\n    id: 3\n  }, {\n    dia: \"Q\",\n    id: 4\n  }, {\n    dia: \"S\",\n    id: 5\n  }, {\n    dia: \"S\",\n    id: 6\n  }];\n  const [diasSelecionados, setDiasSelecionados] = useState(new Map());\n  console.log(diasSelecionados);\n\n  function selecionarDia(dia, id) {\n    const jaSelecionado = diasSelecionados.has(id); // Pergunta pro meu estado se ele já tem esse id, retorna true ou false\n\n    if (jaSelecionado) {\n      // Se eu já tinha selecionado e clicar de novo\n      diasSelecionados.delete(id); // eu preciso tirar o id do mapa\n\n      setDiasSelecionados(new Map(diasSelecionados)); // atualizo o mapa sem o id que acabei de clicar\n    } else {\n      // Se eu estou clicando pela primeira vez\n      setDiasSelecionados(new Map(diasSelecionados.set(id, dia))); // atualizo o mapa colocando as informações do id e do dia nele.\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"nome do h\\xE1bito\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Days, {\n      children: dias.map(dia => {\n        const checkSelecionado = diasSelecionados.has(dia.id); // Meus dias selecionados tem esse id? Lembrando que o id é iterado\n        // Cada vez que clico em um dia, o estado é alterado, então o componente é novamente renderizado.\n        // Ao clicar, eu atualizo meu mapa, então esse if vai achar o id no mapa\n        // Ao achar o id no mapa, vai alterar a prop abaixo de selecionado para true\n\n        return /*#__PURE__*/_jsxDEV(DayWeek, {\n          selecionado: checkSelecionado,\n          onClick: () => selecionarDia(dia.dia, dia.id),\n          children: dia.dia\n        }, dia.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Actions, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InserirHabito, \"yrQImPCOYnAC1CT4xoBPAja+iVU=\");\n\n_c = InserirHabito;\n\nfunction corBotao(selecionado) {\n  if (selecionado) return \"gray\";else return \"white\";\n}\n\nconst Container = styled.div`\n    width: 340px;\n    height: 200px;\n    border-radius: 5px;\n    margin: 0 auto;\n    margin-bottom: 28px;\n    background-color: #FFFFFF;\n\n        input {\n            width: 303px;\n            height: 45px;\n            border-radius: 5px;\n            border: 1px solid var(--cor-cinza-borda);\n            margin: 18px 19px;\n        }\n`;\n_c2 = Container;\nconst DayWeek = styled.button`\n    font-size: 19px;\n    color: var(--cor-cinza-borda);\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    border: 1px solid var(--cor-cinza-borda);\n    margin-left: 19px;\n    margin-right: 1px;\n    background-color: ${props => corBotao(props.selecionado)}; \n`; // Essa props selecionado serve para ver se eu cliquei ou não no dia\n// Quando o botão é clicado, ele chama essa função pata alterar a cor dependendo do clique.\n\n_c3 = DayWeek;\nconst Days = styled.div`\n\n    display: flex;\n    padding-right: 50px;\n    background-color: blue;\n`;\n_c4 = Days;\nconst Actions = styled.div`\n    display: flex;\n    justify-content: right;\n    align-items: center;\n    padding-top: 29px;\n    padding-right: 16px;\n\n\n        p {\n            font-size: 16px;\n            color: var(--cor-botao-footer);\n        }\n\n        button {\n            font-size: 16px;\n            color: #FFFFFF;\n            width: 84px;\n            height: 35px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-radius: 5px;\n            margin-left: 19px;\n            background-color: var(--cor-botao-footer);\n`;\n_c5 = Actions;\nexport default InserirHabito;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"InserirHabito\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"DayWeek\");\n$RefreshReg$(_c4, \"Days\");\n$RefreshReg$(_c5, \"Actions\");","map":{"version":3,"sources":["/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/InserirHabito.js"],"names":["useState","styled","InserirHabito","dias","dia","id","diasSelecionados","setDiasSelecionados","Map","console","log","selecionarDia","jaSelecionado","has","delete","set","map","checkSelecionado","corBotao","selecionado","Container","div","DayWeek","button","props","Days","Actions"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\n\nfunction InserirHabito() {\n\n    const dias = [{ dia: \"D\", id: 0 }, { dia: \"S\", id: 1 }, { dia: \"T\", id: 2 },\n    { dia: \"Q\", id: 3 }, { dia: \"Q\", id: 4 }, { dia: \"S\", id: 5 }, { dia: \"S\", id: 6 },]\n\n    const [diasSelecionados, setDiasSelecionados] = useState(new Map());\n\n    console.log(diasSelecionados);\n\n    function selecionarDia (dia, id) {\n        const jaSelecionado = diasSelecionados.has(id); // Pergunta pro meu estado se ele já tem esse id, retorna true ou false\n        if (jaSelecionado) { // Se eu já tinha selecionado e clicar de novo\n            diasSelecionados.delete(id); // eu preciso tirar o id do mapa\n            setDiasSelecionados(new Map(diasSelecionados)); // atualizo o mapa sem o id que acabei de clicar\n        }\n        else { // Se eu estou clicando pela primeira vez\n            setDiasSelecionados(new Map(diasSelecionados.set(id,dia)));\n            // atualizo o mapa colocando as informações do id e do dia nele.\n        }\n    } \n\n    return (\n        <Container>\n            <input type=\"text\" placeholder=\"nome do hábito\">\n            </input>\n            <Days>\n                {dias.map(dia => {\n                    const checkSelecionado = diasSelecionados.has(dia.id) \n                    // Meus dias selecionados tem esse id? Lembrando que o id é iterado\n                    // Cada vez que clico em um dia, o estado é alterado, então o componente é novamente renderizado.\n                    // Ao clicar, eu atualizo meu mapa, então esse if vai achar o id no mapa\n                    // Ao achar o id no mapa, vai alterar a prop abaixo de selecionado para true\n                return (    \n                    <DayWeek key={dia.id} selecionado={checkSelecionado} onClick={() => selecionarDia(dia.dia, dia.id)}>\n                        {dia.dia}\n                    </DayWeek>)}    \n                )}\n            </Days>\n            <Actions>\n                <p>Cancelar</p>\n                <button>Salvar</button>\n            </Actions>\n        </Container>\n    )\n}\n\nfunction corBotao (selecionado) {\n    if (selecionado) return \"gray\";\n    else return \"white\";\n}\n\nconst Container = styled.div`\n    width: 340px;\n    height: 200px;\n    border-radius: 5px;\n    margin: 0 auto;\n    margin-bottom: 28px;\n    background-color: #FFFFFF;\n\n        input {\n            width: 303px;\n            height: 45px;\n            border-radius: 5px;\n            border: 1px solid var(--cor-cinza-borda);\n            margin: 18px 19px;\n        }\n`\n\nconst DayWeek = styled.button`\n    font-size: 19px;\n    color: var(--cor-cinza-borda);\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    border: 1px solid var(--cor-cinza-borda);\n    margin-left: 19px;\n    margin-right: 1px;\n    background-color: ${(props) => corBotao(props.selecionado)}; \n`\n// Essa props selecionado serve para ver se eu cliquei ou não no dia\n// Quando o botão é clicado, ele chama essa função pata alterar a cor dependendo do clique.\n\nconst Days = styled.div`\n\n    display: flex;\n    padding-right: 50px;\n    background-color: blue;\n`\nconst Actions = styled.div`\n    display: flex;\n    justify-content: right;\n    align-items: center;\n    padding-top: 29px;\n    padding-right: 16px;\n\n\n        p {\n            font-size: 16px;\n            color: var(--cor-botao-footer);\n        }\n\n        button {\n            font-size: 16px;\n            color: #FFFFFF;\n            width: 84px;\n            height: 35px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-radius: 5px;\n            margin-left: 19px;\n            background-color: var(--cor-botao-footer);\n`\n\nexport default InserirHabito;\n\n"]},"metadata":{},"sourceType":"module"}