{"ast":null,"code":"var _jsxFileName = \"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/HabitoHoje.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HabitoHoje(props) {\n  _s();\n\n  const {\n    habito,\n    contagemAtual,\n    contagemRecorde,\n    id,\n    concluidos,\n    setConcluidos,\n    check,\n    setCheck\n  } = props;\n  const {\n    token,\n    setToken\n  } = useContext(UserContext);\n  const config = {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  };\n\n  function marcarHabito() {\n    // SetAtual(atual + 1);\n    setCheck(atual + 1);\n    setConcluidos(concluidos + 1);\n    const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/check`, {}, config);\n    promise.then(response => {\n      const {\n        data\n      } = response;\n    });\n    promise.catch(err => console.log(err.response.statusText));\n  }\n\n  function desmarcarHabito() {\n    // SetAtual(atual - 1);\n    setCheck(atual - 1);\n    setConcluidos(concluidos - 1);\n    const promise = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/uncheck`, {}, config);\n    promise.then(response => {\n      const {\n        data\n      } = response;\n    });\n    promise.catch(err => console.log(err.response.statusText));\n  }\n\n  function toggle() {\n    setIconeSelecionado(!iconeSelecionado);\n    if (iconeSelecionado === true) marcarHabito();else desmarcarHabito();\n  } // Estado usado para mudar a cor do icone ao ser clicado\n\n\n  const [iconeSelecionado, setIconeSelecionado] = useState(true); // Estados usados para renderizar na tela a contagem dos hábitos\n\n  const [atual, SetAtual] = useState(contagemAtual);\n  const [recorde, SetRecorde] = useState(contagemRecorde);\n  /* Estado criado apenas para testar a lógica, modificar depois o\n  código colocando o estado de cima, recorde, que pega os dados da API */\n\n  const [aux, setAux] = useState(1);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: habito\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Atual, {\n        selecionado: iconeSelecionado,\n        children: [\"Sequ\\xEAncia atual: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", check, check === 1 ? \" dia\" : \" dias\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Recorde, {\n        atual: check,\n        recorde: recorde,\n        children: [\"Seu recorde: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", recorde, recorde === 1 ? \" dia\" : \" dias\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      onClick: () => toggle(),\n      selecionado: iconeSelecionado,\n      children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n        name: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HabitoHoje, \"8hu62IBQ+4mBCBtf1neLpVDgYRw=\");\n\n_c = HabitoHoje;\n\nfunction corIcone(selecionado) {\n  /* Por algum motivo esse selecionado está invertido em relação ao estado\n  por isso coloquei o not nele */\n  if (!selecionado) return \"var(--cor-verde)\";else return \"var(--cor-cinza-check)\";\n}\n\nfunction corAtual(selecionado) {\n  if (!selecionado) return \"var(--cor-verde)\";else return \"black\";\n}\n\nfunction corRecorde(atual, recorde) {\n  if (atual < recorde) return \"black\";else return \"var(--cor-verde)\";\n}\n\nconst Container = styled.div`\n    width: 340px;\n    min-height: 94px;\n    border-radius: 5px;\n    border: 1px solid var(--cor-cinza-borda);\n    display: flex;\n    justify-content: space-between;\n    padding-left: 10px;\n    margin: 10px 0;\n    margin-left: 18px;\n    background-color: #FFFFFF;\n\n    h1 {\n        font-size: 20px;\n        color: var(--cor-cinza-letras);\n        padding-top: 13px;\n        padding-left: 15px;\n        margin-bottom: 7px;\n\n    }\n`;\n_c2 = Container;\nconst Atual = styled.p`\n    font-size: 13px;\n    color: var(--color-cinza-letras);\n    padding-left: 15px;\n    margin-bottom: 3px;\n\n    span {\n        color: ${props => corAtual(props.selecionado)};\n`;\n_c3 = Atual;\nconst Recorde = styled.p`\n    font-size: 13px;\n    color: var(--color-cinza-letras);\n    padding-left: 15px;\n\n    span {\n        color: ${props => corRecorde(props.atual, props.recorde)};\n`;\n_c4 = Recorde;\nconst Icon = styled.button`\n    font-size: 69px;\n    background-color: #FFFFFF;\n    border: none;\n    color: ${props => corIcone(props.selecionado)};\n    padding-top: 10px;\n`;\n_c5 = Icon;\nexport default HabitoHoje;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"HabitoHoje\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Atual\");\n$RefreshReg$(_c4, \"Recorde\");\n$RefreshReg$(_c5, \"Icon\");","map":{"version":3,"sources":["/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/HabitoHoje.js"],"names":["useState","useContext","UserContext","axios","styled","HabitoHoje","props","habito","contagemAtual","contagemRecorde","id","concluidos","setConcluidos","check","setCheck","token","setToken","config","headers","marcarHabito","atual","promise","post","then","response","data","catch","err","console","log","statusText","desmarcarHabito","toggle","setIconeSelecionado","iconeSelecionado","SetAtual","recorde","SetRecorde","aux","setAux","corIcone","selecionado","corAtual","corRecorde","Container","div","Atual","p","Recorde","Icon","button"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\n\n\nimport styled from \"styled-components\";\n\nfunction HabitoHoje(props) {\n\n    const { habito, contagemAtual, contagemRecorde,\n        id, concluidos, setConcluidos, check, setCheck } = props;\n\n    const { token, setToken } = useContext(UserContext);\n\n    const config = {\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    }\n\n    function marcarHabito() {\n        // SetAtual(atual + 1);\n        setCheck(atual + 1);\n        setConcluidos(concluidos + 1);\n\n        const promise = axios.post(\n            `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/check`,\n            {}, config)\n        promise.then(response => {\n            const { data } = response;\n        })\n        promise.catch(err => console.log(err.response.statusText));\n    }\n\n    function desmarcarHabito() {\n        // SetAtual(atual - 1);\n        setCheck(atual - 1);\n        setConcluidos(concluidos - 1);\n\n        const promise = axios.post(\n            `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/uncheck`,\n            {}, config)\n        promise.then(response => {\n            const { data } = response;\n        })\n        promise.catch(err => console.log(err.response.statusText));\n    }\n\n    function toggle() {\n        setIconeSelecionado(!iconeSelecionado);\n        if (iconeSelecionado === true) marcarHabito();\n        else desmarcarHabito();\n    }\n\n    // Estado usado para mudar a cor do icone ao ser clicado\n    const [iconeSelecionado, setIconeSelecionado] = useState(true);\n\n    // Estados usados para renderizar na tela a contagem dos hábitos\n    const [atual, SetAtual] = useState(contagemAtual);\n    const [recorde, SetRecorde] = useState(contagemRecorde);\n\n    /* Estado criado apenas para testar a lógica, modificar depois o\n    código colocando o estado de cima, recorde, que pega os dados da API */\n    const [aux, setAux] = useState(1);\n\n    return (\n        <Container>\n            <div>\n                <h1>{habito}</h1>\n                <Atual selecionado={iconeSelecionado}>\n                    Sequência atual: <span> {check}\n                        {check === 1 ? \" dia\" : \" dias\"}\n                    </span>\n                </Atual>\n                <Recorde atual={check} recorde={recorde}>\n                    Seu recorde: <span> {recorde}\n                        {recorde === 1 ? \" dia\" : \" dias\"}\n                    </span>\n                </Recorde>\n            </div>\n            <Icon onClick={() => toggle()} selecionado={iconeSelecionado}>\n                <ion-icon name=\"checkbox\"></ion-icon>\n            </Icon>\n        </Container>\n    )\n}\n\nfunction corIcone(selecionado) {\n    /* Por algum motivo esse selecionado está invertido em relação ao estado\n    por isso coloquei o not nele */\n    if (!selecionado) return \"var(--cor-verde)\";\n    else return \"var(--cor-cinza-check)\";\n}\n\nfunction corAtual(selecionado) {\n    if (!selecionado) return \"var(--cor-verde)\";\n    else return \"black\";\n}\n\nfunction corRecorde(atual, recorde) {\n    if (atual < recorde) return \"black\"\n    else return \"var(--cor-verde)\"\n}\n\nconst Container = styled.div`\n    width: 340px;\n    min-height: 94px;\n    border-radius: 5px;\n    border: 1px solid var(--cor-cinza-borda);\n    display: flex;\n    justify-content: space-between;\n    padding-left: 10px;\n    margin: 10px 0;\n    margin-left: 18px;\n    background-color: #FFFFFF;\n\n    h1 {\n        font-size: 20px;\n        color: var(--cor-cinza-letras);\n        padding-top: 13px;\n        padding-left: 15px;\n        margin-bottom: 7px;\n\n    }\n`\nconst Atual = styled.p`\n    font-size: 13px;\n    color: var(--color-cinza-letras);\n    padding-left: 15px;\n    margin-bottom: 3px;\n\n    span {\n        color: ${(props) => corAtual(props.selecionado)};\n`\nconst Recorde = styled.p`\n    font-size: 13px;\n    color: var(--color-cinza-letras);\n    padding-left: 15px;\n\n    span {\n        color: ${(props) => corRecorde(props.atual, props.recorde)};\n`\n\nconst Icon = styled.button`\n    font-size: 69px;\n    background-color: #FFFFFF;\n    border: none;\n    color: ${(props) => corIcone(props.selecionado)};\n    padding-top: 10px;\n`\n\n\n\n\nexport default HabitoHoje"]},"metadata":{},"sourceType":"module"}