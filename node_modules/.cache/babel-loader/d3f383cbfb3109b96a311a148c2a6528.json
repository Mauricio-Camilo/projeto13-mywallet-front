{"ast":null,"code":"var _jsxFileName = \"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/InserirHabito.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InserirHabito(props) {\n  _s();\n\n  const APIPost = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits\";\n  const dias = [{\n    dia: \"D\",\n    id: 0\n  }, {\n    dia: \"S\",\n    id: 1\n  }, {\n    dia: \"T\",\n    id: 2\n  }, {\n    dia: \"Q\",\n    id: 3\n  }, {\n    dia: \"Q\",\n    id: 4\n  }, {\n    dia: \"S\",\n    id: 5\n  }, {\n    dia: \"S\",\n    id: 6\n  }];\n  const [cancelarHabito, setCancelarHabito] = useState(false);\n  const [habito, setHabito] = useState();\n  const [diasSelecionados, setDiasSelecionados] = useState(new Map());\n  console.log(diasSelecionados);\n\n  function selecionarDia(dia, id) {\n    const jaSelecionado = diasSelecionados.has(id); // Pergunta pro meu estado se ele já tem esse id, retorna true ou false\n\n    if (jaSelecionado) {\n      // Se eu já tinha selecionado e clicar de novo\n      diasSelecionados.delete(id); // eu preciso tirar o id do mapa\n\n      setDiasSelecionados(new Map(diasSelecionados)); // atualizo o mapa sem o id que acabei de clicar\n    } else {\n      // Se eu estou clicando pela primeira vez\n      setDiasSelecionados(new Map(diasSelecionados.set(id, dia))); // atualizo o mapa colocando as informações do id e do dia nele.\n    }\n  }\n\n  function ResetarHabito() {\n    setCancelarHabito(true);\n    props.setVisivel(false);\n  }\n\n  function SalvarHabito() {\n    console.log(\"fui clicado\");\n    const promise = axios.post(APIPost, {\n      name: habito,\n      days: [1, 2, 3]\n    });\n    promise.then(response => {\n      const {\n        data\n      } = response;\n      console.log(data);\n      console.log(\"deu bom\");\n      ResetarHabito();\n    });\n    promise.catch(response => {\n      alert(\"Falha no envio dos dados, por favor tente novamente\");\n      ResetarHabito();\n    });\n  }\n\n  console.log(habito);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cancelarHabito ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"nome do h\\xE1bito\",\n        onChange: e => setHabito(e.target.value),\n        value: habito\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Days, {\n        children: dias.map(dia => {\n          const checkSelecionado = diasSelecionados.has(dia.id); // Meus dias selecionados tem esse id? Lembrando que o id é iterado\n          // Cada vez que clico em um dia, o estado é alterado, então o componente é novamente renderizado.\n          // Ao clicar, eu atualizo meu mapa, então esse if vai achar o id no mapa\n          // Ao achar o id no mapa, vai alterar a prop abaixo de selecionado para true\n\n          return /*#__PURE__*/_jsxDEV(DayWeek, {\n            selecionado: checkSelecionado,\n            onClick: () => selecionarDia(dia.dia, dia.id),\n            children: dia.dia\n          }, dia.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Actions, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => ResetarHabito(),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert(\"Salvar os dados\"),\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(InserirHabito, \"GqXv2hsoaR8TJ40oKJW1l30eceA=\");\n\n_c = InserirHabito;\n\nfunction corBotao(selecionado) {\n  if (selecionado) return \"gray\";else return \"white\";\n}\n\nconst Container = styled.div`\n    width: 340px;\n    height: 200px;\n    border-radius: 5px;\n    margin: 0 auto;\n    margin-bottom: 28px;\n    background-color: #FFFFFF;\n\n        input {\n            width: 303px;\n            height: 45px;\n            font-size: 20px;\n            color: var(--cor-cinza-input);\n            border-radius: 5px;\n            border: 1px solid var(--cor-cinza-borda);\n            margin: 18px 19px;\n            padding-left: 11px;\n        }\n`;\n_c2 = Container;\nconst DayWeek = styled.button`\n    font-size: 19px;\n    color: var(--cor-cinza-borda);\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    border: 1px solid var(--cor-cinza-borda);\n    margin-left: 19px;\n    margin-right: 1px;\n    background-color: ${props => corBotao(props.selecionado)}; \n`; // Essa props selecionado serve para ver se eu cliquei ou não no dia\n// Quando o botão é clicado, ele chama essa função pata alterar a cor dependendo do clique.\n\n_c3 = DayWeek;\nconst Days = styled.div`\n\n    display: flex;\n    padding-right: 50px;\n    background-color: blue;\n`;\n_c4 = Days;\nconst Actions = styled.div`\n    display: flex;\n    justify-content: right;\n    align-items: center;\n    padding-top: 29px;\n    padding-right: 16px;\n\n\n        p {\n            font-size: 16px;\n            color: var(--cor-botao-footer);\n        }\n\n        button {\n            font-size: 16px;\n            color: #FFFFFF;\n            width: 84px;\n            height: 35px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-radius: 5px;\n            margin-left: 19px;\n            background-color: var(--cor-botao-footer);\n        }\n`;\n_c5 = Actions;\nexport default InserirHabito;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"InserirHabito\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"DayWeek\");\n$RefreshReg$(_c4, \"Days\");\n$RefreshReg$(_c5, \"Actions\");","map":{"version":3,"sources":["/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/InserirHabito.js"],"names":["useState","styled","axios","InserirHabito","props","APIPost","dias","dia","id","cancelarHabito","setCancelarHabito","habito","setHabito","diasSelecionados","setDiasSelecionados","Map","console","log","selecionarDia","jaSelecionado","has","delete","set","ResetarHabito","setVisivel","SalvarHabito","promise","post","name","days","then","response","data","catch","alert","e","target","value","map","checkSelecionado","corBotao","selecionado","Container","div","DayWeek","button","Days","Actions"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nfunction InserirHabito(props) {\n\n    const APIPost = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits\";\n\n    const dias = [{ dia: \"D\", id: 0 }, { dia: \"S\", id: 1 }, { dia: \"T\", id: 2 },\n    { dia: \"Q\", id: 3 }, { dia: \"Q\", id: 4 }, { dia: \"S\", id: 5 }, { dia: \"S\", id: 6 },]\n\n    const [cancelarHabito, setCancelarHabito] = useState(false);\n\n    const [habito, setHabito] = useState();\n\n    const [diasSelecionados, setDiasSelecionados] = useState(new Map());\n\n    console.log(diasSelecionados);\n\n    function selecionarDia(dia, id) {\n        const jaSelecionado = diasSelecionados.has(id); // Pergunta pro meu estado se ele já tem esse id, retorna true ou false\n        if (jaSelecionado) { // Se eu já tinha selecionado e clicar de novo\n            diasSelecionados.delete(id); // eu preciso tirar o id do mapa\n            setDiasSelecionados(new Map(diasSelecionados)); // atualizo o mapa sem o id que acabei de clicar\n        }\n        else { // Se eu estou clicando pela primeira vez\n            setDiasSelecionados(new Map(diasSelecionados.set(id, dia)));\n            // atualizo o mapa colocando as informações do id e do dia nele.\n        }\n    }\n\n    function ResetarHabito() {\n        setCancelarHabito(true);\n        props.setVisivel(false);\n    }\n\n    function SalvarHabito() {\n        console.log(\"fui clicado\");\n        const promise = axios.post(APIPost, {\n            name: habito,\n            days: [1,2,3]\n        });\n        promise.then(response => {\n            const { data } = response;\n            console.log(data);\n            console.log(\"deu bom\");\n            ResetarHabito();\n        }\n        )\n        promise.catch(response => {\n            alert(\"Falha no envio dos dados, por favor tente novamente\");\n            ResetarHabito();\n        })\n\n    }\n\n    console.log(habito);\n    return (\n        <>\n            {cancelarHabito ?\n                <></> :\n                <Container>\n                    <input type=\"text\" placeholder=\"nome do hábito\"\n                        onChange={(e) => setHabito(e.target.value)}\n                        value={habito}>\n                    </input>\n                    <Days>\n                        {dias.map(dia => {\n                            const checkSelecionado = diasSelecionados.has(dia.id)\n                            // Meus dias selecionados tem esse id? Lembrando que o id é iterado\n                            // Cada vez que clico em um dia, o estado é alterado, então o componente é novamente renderizado.\n                            // Ao clicar, eu atualizo meu mapa, então esse if vai achar o id no mapa\n                            // Ao achar o id no mapa, vai alterar a prop abaixo de selecionado para true\n                            return (\n                                <DayWeek key={dia.id} selecionado={checkSelecionado} onClick={() => selecionarDia(dia.dia, dia.id)}>\n                                    {dia.dia}\n                                </DayWeek>)\n                        }\n                        )}\n                    </Days>\n                    <Actions>\n                        <p onClick={() => ResetarHabito()}>Cancelar</p>\n                        <button onClick={() => alert(\"Salvar os dados\")}>Salvar</button>\n                    </Actions>\n                </Container>\n            }\n        </>\n    )\n}\n\nfunction corBotao(selecionado) {\n    if (selecionado) return \"gray\";\n    else return \"white\";\n}\n\nconst Container = styled.div`\n    width: 340px;\n    height: 200px;\n    border-radius: 5px;\n    margin: 0 auto;\n    margin-bottom: 28px;\n    background-color: #FFFFFF;\n\n        input {\n            width: 303px;\n            height: 45px;\n            font-size: 20px;\n            color: var(--cor-cinza-input);\n            border-radius: 5px;\n            border: 1px solid var(--cor-cinza-borda);\n            margin: 18px 19px;\n            padding-left: 11px;\n        }\n`\n\nconst DayWeek = styled.button`\n    font-size: 19px;\n    color: var(--cor-cinza-borda);\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    border: 1px solid var(--cor-cinza-borda);\n    margin-left: 19px;\n    margin-right: 1px;\n    background-color: ${(props) => corBotao(props.selecionado)}; \n`\n// Essa props selecionado serve para ver se eu cliquei ou não no dia\n// Quando o botão é clicado, ele chama essa função pata alterar a cor dependendo do clique.\n\nconst Days = styled.div`\n\n    display: flex;\n    padding-right: 50px;\n    background-color: blue;\n`\nconst Actions = styled.div`\n    display: flex;\n    justify-content: right;\n    align-items: center;\n    padding-top: 29px;\n    padding-right: 16px;\n\n\n        p {\n            font-size: 16px;\n            color: var(--cor-botao-footer);\n        }\n\n        button {\n            font-size: 16px;\n            color: #FFFFFF;\n            width: 84px;\n            height: 35px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-radius: 5px;\n            margin-left: 19px;\n            background-color: var(--cor-botao-footer);\n        }\n`\n\nexport default InserirHabito;\n\n"]},"metadata":{},"sourceType":"module"}