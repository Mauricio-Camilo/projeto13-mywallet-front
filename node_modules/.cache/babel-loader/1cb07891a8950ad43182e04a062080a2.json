{"ast":null,"code":"var _jsxFileName = \"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaLogin/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport logo from \"../../assets/logo.svg\";\nimport { ThreeDots } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TelaLogin() {\n  _s();\n\n  const {\n    setToken,\n    setPerfil\n  } = useContext(UserContext);\n\n  const loading = /*#__PURE__*/_jsxDEV(ThreeDots, {\n    color: \"#FFFFFF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 21\n  }, this);\n\n  const [entrar, setEntrar] = useState(\"Entrar\");\n  const [selecionado, setSelecionado] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const API = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/login\";\n  const navigate = useNavigate();\n\n  function fazerLogin(event) {\n    event.preventDefault();\n    setEntrar(loading);\n    setSelecionado(true);\n    const promise = axios.post(API, {\n      email: email,\n      password: senha\n    });\n    promise.then(response => {\n      const {\n        data\n      } = response;\n      setToken(data.token);\n      setPerfil(data.image);\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"perfil\", data.image);\n      navigate(\"/habitos\");\n    });\n    promise.catch(response => {\n      alert(\"Informações incorretas, digite novamente email e senha\");\n      setSelecionado(false);\n      setEntrar(\"Entrar\");\n      setEmail(\"\");\n      setSenha(\"\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      src: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fazerLogin,\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {\n        selecionado: selecionado,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"email\",\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"senha\",\n          onChange: e => setSenha(e.target.value),\n          value: senha,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Login, {\n        selecionado: selecionado,\n        type: \"submit\",\n        children: entrar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hiperlink, {\n      onClick: () => navigate(\"/cadastro\"),\n      children: \"N\\xE3o tem uma conta? Cadastre-se \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TelaLogin, \"UDo0T2+PTP1+v/HhMJh9VdudhMI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TelaLogin;\n\nfunction mudarBotao(selecionado) {\n  if (selecionado) return \"0.7\";else return \"1\";\n}\n\nfunction resetarBotao(selecionado) {\n  if (selecionado) return \"none\";else return \"\";\n}\n\nfunction corInput(selecionado) {\n  if (selecionado) return \"var(--cor-cinza-check)\";else return \"#FFFFFF\";\n}\n\nconst Container = styled.div`\n    width: 375px;\n    height: 667px;\n`;\n_c2 = Container;\nconst Logo = styled.img`\n    margin: 0 98px;\n    margin-top: 68px;\n    margin-bottom: 33px;\n`;\n_c3 = Logo;\nconst Inputs = styled.div`\n    input {\n        width: 303px;\n        height: 45px;\n        padding-left: 11px;\n        margin-left: 35px;\n        margin-bottom: 6px;\n        background-color: ${props => corInput(props.selecionado)};\n        pointer-events: ${props => resetarBotao(props.selecionado)};;\n    }\n`;\n_c4 = Inputs;\nconst Login = styled.button`\n    font-size: 22px;\n    color: #FFFFFF;\n    width: 303px;\n    height: 45px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    margin-left: 35px;\n    margin-bottom: 25px;\n    background-color: var(--cor-azul-claro);\n    opacity: ${props => mudarBotao(props.selecionado)};\n    pointer-events: ${props => resetarBotao(props.selecionado)};\n`;\n_c5 = Login;\nconst Hiperlink = styled.p`\n    font-size: 14px;\n    text-align: center;\n    text-decoration: underline;\n    color: var(--cor-azul-claro);\n`;\n_c6 = Hiperlink;\nexport default TelaLogin;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"TelaLogin\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Logo\");\n$RefreshReg$(_c4, \"Inputs\");\n$RefreshReg$(_c5, \"Login\");\n$RefreshReg$(_c6, \"Hiperlink\");","map":{"version":3,"sources":["/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaLogin/index.js"],"names":["useState","useContext","UserContext","axios","useNavigate","styled","logo","ThreeDots","TelaLogin","setToken","setPerfil","loading","entrar","setEntrar","selecionado","setSelecionado","email","setEmail","senha","setSenha","API","navigate","fazerLogin","event","preventDefault","promise","post","password","then","response","data","token","image","localStorage","setItem","catch","alert","e","target","value","mudarBotao","resetarBotao","corInput","Container","div","Logo","img","Inputs","props","Login","button","Hiperlink","p"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport logo from \"../../assets/logo.svg\";\nimport { ThreeDots } from 'react-loader-spinner';\n\nfunction TelaLogin() {\n\n    const { setToken, setPerfil } = useContext(UserContext);\n\n    const loading = <ThreeDots color=\"#FFFFFF\" />;\n    const [entrar, setEntrar] = useState(\"Entrar\");\n\n    const [selecionado, setSelecionado] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [senha, setSenha] = useState(\"\");\n\n    const API = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/login\";\n\n    const navigate = useNavigate();\n\n    function fazerLogin(event) {\n        event.preventDefault();\n        setEntrar(loading);\n        setSelecionado(true);\n        const promise = axios.post(API, {\n            email: email,\n            password: senha\n        });\n        promise.then(response => {\n            const { data } = response;\n            setToken(data.token);\n            setPerfil(data.image);\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"perfil\", data.image);\n            navigate(\"/habitos\"); \n        }\n        )\n        promise.catch(response => {\n            alert(\"Informações incorretas, digite novamente email e senha\");\n            setSelecionado(false);\n            setEntrar(\"Entrar\");\n            setEmail(\"\");\n            setSenha(\"\");\n        })\n    }\n\n    return (\n\n        <Container>\n            <Logo src={logo}></Logo>\n            <form onSubmit={fazerLogin}>\n                <Inputs selecionado={selecionado}>\n                    <input type=\"text\" placeholder=\"email\"\n                        onChange={(e) => setEmail(e.target.value)}\n                        value={email} required>\n                    </input>\n                    <input type=\"password\" placeholder=\"senha\"\n                        onChange={(e) => setSenha(e.target.value)}\n                        value={senha} required>\n                    </input>\n                </Inputs>\n                <Login selecionado={selecionado} type=\"submit\">{entrar}</Login>\n            </form>\n            <Hiperlink onClick={() => navigate(\"/cadastro\")}>\n                Não tem uma conta? Cadastre-se </Hiperlink>\n        </Container>\n    )\n}\n\nfunction mudarBotao(selecionado) {\n    if (selecionado) return \"0.7\";\n    else return \"1\";\n}\n\nfunction resetarBotao(selecionado) {\n    if (selecionado) return \"none\";\n    else return \"\";\n}\n\nfunction corInput(selecionado) {\n    if (selecionado) return \"var(--cor-cinza-check)\";\n    else return \"#FFFFFF\";\n}\n\nconst Container = styled.div`\n    width: 375px;\n    height: 667px;\n`\n\nconst Logo = styled.img`\n    margin: 0 98px;\n    margin-top: 68px;\n    margin-bottom: 33px;\n`\n\nconst Inputs = styled.div`\n    input {\n        width: 303px;\n        height: 45px;\n        padding-left: 11px;\n        margin-left: 35px;\n        margin-bottom: 6px;\n        background-color: ${(props) => corInput(props.selecionado)};\n        pointer-events: ${(props) => resetarBotao(props.selecionado)};;\n    }\n`\nconst Login = styled.button`\n    font-size: 22px;\n    color: #FFFFFF;\n    width: 303px;\n    height: 45px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    margin-left: 35px;\n    margin-bottom: 25px;\n    background-color: var(--cor-azul-claro);\n    opacity: ${(props) => mudarBotao(props.selecionado)};\n    pointer-events: ${(props) => resetarBotao(props.selecionado)};\n`\nconst Hiperlink = styled.p`\n    font-size: 14px;\n    text-align: center;\n    text-decoration: underline;\n    color: var(--cor-azul-claro);\n`\nexport default TelaLogin;"]},"metadata":{},"sourceType":"module"}