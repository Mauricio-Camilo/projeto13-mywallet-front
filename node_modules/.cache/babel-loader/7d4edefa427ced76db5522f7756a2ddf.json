{"ast":null,"code":"var _jsxFileName = \"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaCadastro/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Grid } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TelaCadastro() {\n  _s();\n\n  const loading = /*#__PURE__*/_jsxDEV(Grid, {\n    color: \"red\",\n    height: 50,\n    width: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 21\n  }, this);\n\n  const [selecionado, setSelecionado] = useState(false);\n  const [cadastrar, setCadastrar] = useState(\"Cadastrar\");\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [nome, setNome] = useState(\"\");\n  const [foto, setFoto] = useState(\"\");\n  const API = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/sign-up\";\n  const navigate = useNavigate();\n\n  function cadastrarDados() {\n    console.log(\"fui clicado\");\n    setCadastrar(loading);\n    setSelecionado(true);\n    const promise = axios.post(API, {\n      email: email,\n      name: nome,\n      image: foto,\n      password: senha\n    });\n    promise.then(response => {\n      const {\n        data\n      } = response;\n      console.log(data);\n      console.log(\"deu bom\");\n      navigate(\"/\");\n    });\n    promise.catch(response => {\n      alert(\"Falha no envio dos dados, por favor tente novamente\");\n      setCadastrar(\"Cadastrar\");\n      setSelecionado(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TELA DE CADASTRO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TrackIt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"email\",\n          onChange: e => setEmail(e.target.value),\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"senha\",\n          onChange: e => setSenha(e.target.value),\n          value: senha\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"nome\",\n          onChange: e => setNome(e.target.value),\n          value: nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"foto\",\n          onChange: e => setFoto(e.target.value),\n          value: foto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Cadastrar, {\n        selecionado: selecionado,\n        onClick: cadastrarDados,\n        children: cadastrar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => navigate(\"/\"),\n        children: \"J\\xE1 tem uma conta? Fa\\xE7a login!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TelaCadastro, \"t/gu3a6jLkQ0KuILkAKOteDdTwM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TelaCadastro;\n\nfunction corBotao(selecionado) {\n  if (selecionado) return \"green\";else return \"blue\";\n}\n\nconst Container = styled.div`\n  \n`;\n_c2 = Container;\nconst Cadastrar = styled.button`\n    font-size: 35px;\n    color: #FFFFFF;\n    width: 200px;\n    height: 150px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    margin-left: 19px;\n    background-color: ${props => corBotao(props.selecionado)};\n`;\n_c3 = Cadastrar;\nexport default TelaCadastro;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TelaCadastro\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Cadastrar\");","map":{"version":3,"sources":["/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaCadastro/index.js"],"names":["useState","axios","useNavigate","styled","Grid","TelaCadastro","loading","selecionado","setSelecionado","cadastrar","setCadastrar","email","setEmail","senha","setSenha","nome","setNome","foto","setFoto","API","navigate","cadastrarDados","console","log","promise","post","name","image","password","then","response","data","catch","alert","e","target","value","corBotao","Container","div","Cadastrar","button","props"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Grid } from  'react-loader-spinner';\n\n\nfunction TelaCadastro() {\n\n    const loading = <Grid color=\"red\" height={50} width={80} />;  \n    const [selecionado, setSelecionado] = useState(false);         \n    const [cadastrar, setCadastrar] = useState (\"Cadastrar\");\n    const [email, setEmail] = useState(\"\");\n    const [senha, setSenha] = useState(\"\");\n    const [nome, setNome] = useState(\"\");\n    const [foto, setFoto] = useState(\"\");\n\n\n    const API = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/sign-up\";\n\n    const navigate = useNavigate();\n\n    function cadastrarDados() {\n        console.log(\"fui clicado\");\n        setCadastrar(loading);\n        setSelecionado(true);\n        const promise = axios.post(API, {\n            email: email,\n            name: nome,\n            image: foto,\n            password: senha\n        });\n        promise.then(response => {\n            const { data } = response;\n            console.log(data);\n            console.log(\"deu bom\");\n            navigate(\"/\");\n        }\n        )\n        promise.catch(response => {\n            alert(\"Falha no envio dos dados, por favor tente novamente\");\n            setCadastrar(\"Cadastrar\")\n            setSelecionado(false);\n        })\n    }\n    return (\n        <>\n            <Container>\n            <h1>TELA DE CADASTRO</h1>\n            <h1>TrackIt</h1>\n            <div>\n                <input type=\"text\" placeholder=\"email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    value={email}>\n                </input>\n                <input type=\"password\" placeholder=\"senha\"\n                    onChange={(e) => setSenha(e.target.value)}\n                    value={senha}>\n                </input>\n                <input type=\"text\" placeholder=\"nome\"\n                    onChange={(e) => setNome(e.target.value)}\n                    value={nome}>\n                </input>\n                <input type=\"text\" placeholder=\"foto\"\n                    onChange={(e) => setFoto(e.target.value)}\n                    value={foto}>\n                </input>\n            </div>\n            <Cadastrar  selecionado={selecionado} onClick={cadastrarDados}>{cadastrar}</Cadastrar>\n                <p onClick={() => navigate(\"/\")}>Já tem uma conta? Faça login!</p>\n                </Container> \n   \n        </>\n    )\n}\n\nfunction corBotao (selecionado) {\n    if (selecionado) return \"green\";\n    else return \"blue\";\n}\n\nconst Container = styled.div `\n  \n`\n\nconst Cadastrar = styled.button `\n    font-size: 35px;\n    color: #FFFFFF;\n    width: 200px;\n    height: 150px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    margin-left: 19px;\n    background-color: ${(props) => corBotao(props.selecionado)};\n`\n\n\nexport default TelaCadastro;"]},"metadata":{},"sourceType":"module"}