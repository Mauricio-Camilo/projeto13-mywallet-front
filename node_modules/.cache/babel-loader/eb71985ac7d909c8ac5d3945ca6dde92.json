{"ast":null,"code":"var _jsxFileName = \"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport dayjs from \"dayjs\";\nimport Header from \"../Layout/Header\";\nimport Menu from \"../Layout/Menu\";\nimport HabitoHoje from \"./HabitoHoje\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TelaHoje() {\n  _s();\n\n  let updateLocale = require('dayjs/plugin/updateLocale');\n\n  dayjs.extend(updateLocale);\n  dayjs.updateLocale('en', {\n    weekdays: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"]\n  });\n  const dataBR = dayjs().format('dddd, DD/MM');\n  const {\n    token,\n    setPercentage,\n    atual,\n    setAtual,\n    recorde,\n    setRecorde\n  } = useContext(UserContext); // Estado que guarda os habitos que vieram da API\n\n  const [habitosHoje, setHabitosHoje] = useState([]);\n  const [habitosConcluidos, setHabitosConcluidos] = useState(0);\n  const navigate = useNavigate();\n  const API = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today\";\n  const config = {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  };\n  useEffect(() => {\n    const promise = axios.get(API, config);\n    promise.then(response => {\n      const {\n        data\n      } = response;\n      console.log(\"Deu bom\"); // console.log(data);\n\n      setHabitosHoje(data);\n      console.log(habitosHoje);\n      console.log(habitosHoje[0].name); // setAtual(data[0].name);\n      // console.log(atual);\n\n      setRecorde(data.highestSequence);\n    });\n    promise.catch(response => {\n      console.log(\"Deu ruim\");\n    });\n  }, []); // const [atual, setAtual] = useState(contagemAtual);\n  // const [recorde, setRecorde] = useState(contagemRecorde);\n\n  console.log(habitosConcluidos);\n  let resultado = 0;\n  resultado = parseInt(habitosConcluidos / habitosHoje.length * 100);\n  setPercentage(resultado); // console.log(resultado);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Today, {\n        children: dataBR\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), resultado === 0 ? /*#__PURE__*/_jsxDEV(Nohabits, {\n        children: \"Nenhum h\\xE1bito conclu\\xEDdo ainda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Hashabits, {\n        children: [resultado, \"% dos h\\xE1bitos conclu\\xEDdos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), habitosHoje.map(habito => {\n        const {\n          id,\n          name,\n          currentSequence,\n          highestSequence\n        } = habito;\n        return /*#__PURE__*/_jsxDEV(HabitoHoje, {\n          habito: name,\n          id: id,\n          contagemAtual: currentSequence,\n          contagemRecorde: highestSequence,\n          concluidos: habitosConcluidos,\n          setConcluidos: valor => setHabitosConcluidos(valor)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TelaHoje, \"W0jIatXozFKDacyn4HjOfHHZGR8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TelaHoje;\nconst Container = styled.div`\n    background-color: #E5E5E5;\n    width: 375px;\n    height: 597px;\n    padding-bottom: 100px;\n    margin: 70px 0;\n`;\n_c2 = Container;\nconst Today = styled.h2`\n    font-size: 23px;\n    color: var(--cor-azul-escuro);\n    padding-top: 28px;\n    margin-bottom: 3px;\n    margin-left: 18px;\n`;\n_c3 = Today;\nconst Nohabits = styled.p`\n    font-size: 18px;\n    color: var(--cor-cinza-hoje);\n    margin-left: 18px;\n`;\n_c4 = Nohabits;\nconst Hashabits = styled.p`\n    font-size: 18px;\n    color: var(--cor-verde);\n    margin-left: 18px;\n`;\n_c5 = Hashabits;\nexport default TelaHoje;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TelaHoje\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Today\");\n$RefreshReg$(_c4, \"Nohabits\");\n$RefreshReg$(_c5, \"Hashabits\");","map":{"version":3,"sources":["/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/index.js"],"names":["useState","useContext","useEffect","UserContext","axios","useNavigate","styled","dayjs","Header","Menu","HabitoHoje","TelaHoje","updateLocale","require","extend","weekdays","dataBR","format","token","setPercentage","atual","setAtual","recorde","setRecorde","habitosHoje","setHabitosHoje","habitosConcluidos","setHabitosConcluidos","navigate","API","config","headers","promise","get","then","response","data","console","log","name","highestSequence","catch","resultado","parseInt","length","map","habito","id","currentSequence","valor","Container","div","Today","h2","Nohabits","p","Hashabits"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport dayjs from \"dayjs\";\n\nimport Header from \"../Layout/Header\";\nimport Menu from \"../Layout/Menu\";\nimport HabitoHoje from \"./HabitoHoje\";\n\nfunction TelaHoje() {\n\n    let updateLocale = require('dayjs/plugin/updateLocale')\n    dayjs.extend(updateLocale);\n  \n    dayjs.updateLocale('en', {\n      weekdays: [\n        \"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"\n      ]\n    })\n  \n    const dataBR = dayjs().format('dddd, DD/MM')\n\n    const { token, setPercentage, atual, \n            setAtual, recorde, setRecorde } = useContext(UserContext);\n\n    // Estado que guarda os habitos que vieram da API\n    const [habitosHoje, setHabitosHoje] = useState([]);\n\n    const [habitosConcluidos, setHabitosConcluidos] = useState(0);\n\n    const navigate = useNavigate();\n\n    const API = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today\";\n\n    const config = {\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    }\n\n    useEffect(() => {\n        const promise = axios.get(API, config);\n        promise.then(response => {\n            const { data } = response;\n            console.log(\"Deu bom\");\n            // console.log(data);\n            setHabitosHoje(data);\n            console.log(habitosHoje);\n            console.log(habitosHoje[0].name)\n            // setAtual(data[0].name);\n            // console.log(atual);\n            setRecorde(data.highestSequence);\n        });\n        promise.catch(response => {\n            console.log(\"Deu ruim\");\n        })\n    }, []);\n\n    // const [atual, setAtual] = useState(contagemAtual);\n    // const [recorde, setRecorde] = useState(contagemRecorde);\n\n    console.log(habitosConcluidos)\n\n    let resultado = 0;\n    resultado = parseInt((habitosConcluidos / habitosHoje.length) * 100);\n    setPercentage(resultado);\n    // console.log(resultado);\n\n    return (\n        <>\n            <Header />\n            <Container>\n                <Today>{dataBR}</Today>\n                {resultado === 0 ?\n                    <Nohabits>Nenhum hábito concluído ainda</Nohabits>:\n                    <Hashabits>{resultado}% dos hábitos concluídos</Hashabits>\n                }\n                {habitosHoje.map(habito => {\n                    const { id, name, currentSequence, highestSequence } = habito;\n                    return (\n                        <HabitoHoje key={id} habito={name} id={id}\n                            contagemAtual={currentSequence} contagemRecorde={highestSequence}\n                            concluidos={habitosConcluidos}\n                            setConcluidos={(valor) => setHabitosConcluidos(valor)} />\n                    )\n                })\n                }\n            </Container>\n            <Menu />\n        </>\n    )\n}\n\n\nconst Container = styled.div`\n    background-color: #E5E5E5;\n    width: 375px;\n    height: 597px;\n    padding-bottom: 100px;\n    margin: 70px 0;\n`\nconst Today = styled.h2`\n    font-size: 23px;\n    color: var(--cor-azul-escuro);\n    padding-top: 28px;\n    margin-bottom: 3px;\n    margin-left: 18px;\n`\nconst Nohabits = styled.p`\n    font-size: 18px;\n    color: var(--cor-cinza-hoje);\n    margin-left: 18px;\n`\n\nconst Hashabits = styled.p`\n    font-size: 18px;\n    color: var(--cor-verde);\n    margin-left: 18px;\n`\nexport default TelaHoje;"]},"metadata":{},"sourceType":"module"}