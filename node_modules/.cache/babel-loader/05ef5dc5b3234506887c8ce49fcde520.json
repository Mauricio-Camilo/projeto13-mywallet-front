{"ast":null,"code":"var _jsxFileName = \"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaLogin/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Header from \"../Layout/Header\";\nimport logo from \"../../assets/logo.svg\";\nimport { Grid } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TelaLogin() {\n  _s();\n\n  const {\n    token,\n    setToken\n  } = useContext(UserContext);\n\n  const loading = /*#__PURE__*/_jsxDEV(Grid, {\n    color: \"red\",\n    height: 50,\n    width: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 21\n  }, this);\n\n  const [entrar, setEntrar] = useState(\"Entrar\");\n  const [selecionado, setSelecionado] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const API = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/login\";\n  const navigate = useNavigate();\n\n  function fazerLogin() {\n    setEntrar(loading);\n    setSelecionado(true);\n    const promise = axios.post(API, {\n      email: email,\n      password: senha\n    });\n    promise.then(response => {\n      const {\n        data\n      } = response;\n      console.log(data.token);\n      setToken(data.token);\n      navigate(\"/habitos\"); // mudar depois para tela hoje\n    });\n    promise.catch(response => {\n      alert(\"Informações incorretas, digite novamente email e senha\");\n      setSelecionado(false);\n      setEntrar(\"Entrar\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      src: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      selecionado: selecionado,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"senha\",\n        onChange: e => setSenha(e.target.value),\n        value: senha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      selecionado: selecionado,\n      onClick: fazerLogin,\n      children: entrar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hiperlink, {\n      onClick: () => navigate(\"/cadastro\"),\n      children: \"N\\xE3o tem uma conta? Cadastre-se \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TelaLogin, \"2sem8Jt4T1ierQOFmxmffHS9NaE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TelaLogin;\n\nfunction corBotao(selecionado) {\n  if (selecionado) return \"green\";else return \"blue\";\n}\n\nfunction resetarBotao(selecionado) {\n  if (selecionado) return \"none\";else return \"\";\n}\n\nfunction corInput(selecionado) {\n  if (selecionado) return \"gray\";else return \"white\";\n}\n\nconst Container = styled.div`\n    width: 375px;\n    height: 667px;\n    background-color: pink;\n`;\n_c2 = Container;\nconst Logo = styled.img`\n    margin: 0 98px;\n    margin-top: 68px;\n    margin-bottom: 33px;\n`;\n_c3 = Logo;\nconst Inputs = styled.div`\n    input {\n        width: 303px;\n        height: 45px;\n        padding-left: 11px;\n        margin-left: 35px;\n        margin-bottom: 6px;\n        background-color: ${props => corInput(props.selecionado)};\n        pointer-events: ${props => resetarBotao(props.selecionado)};;\n    }\n    `;\n_c4 = Inputs;\nconst Login = styled.button`\n    font-size: 22px;\n    color: #FFFFFF;\n    width: 303px;\n    height: 45px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    margin-left: 35px;\n    margin-bottom: 25px;\n    pointer-events: ${props => resetarBotao(props.selecionado)};\n    background-color: ${props => corBotao(props.selecionado)};\n`;\n_c5 = Login;\nconst Hiperlink = styled.p`\n`;\n_c6 = Hiperlink;\nexport default TelaLogin;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"TelaLogin\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Logo\");\n$RefreshReg$(_c4, \"Inputs\");\n$RefreshReg$(_c5, \"Login\");\n$RefreshReg$(_c6, \"Hiperlink\");","map":{"version":3,"sources":["/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaLogin/index.js"],"names":["useState","useContext","UserContext","axios","useNavigate","styled","Header","logo","Grid","TelaLogin","token","setToken","loading","entrar","setEntrar","selecionado","setSelecionado","email","setEmail","senha","setSenha","API","navigate","fazerLogin","promise","post","password","then","response","data","console","log","catch","alert","e","target","value","corBotao","resetarBotao","corInput","Container","div","Logo","img","Inputs","props","Login","button","Hiperlink","p"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Header from \"../Layout/Header\"\nimport logo from \"../../assets/logo.svg\";\nimport { Grid } from 'react-loader-spinner';\n\nfunction TelaLogin() {\n\n    const { token, setToken } = useContext(UserContext);\n\n    const loading = <Grid color=\"red\" height={50} width={80} />;\n    const [entrar, setEntrar] = useState(\"Entrar\");\n\n    const [selecionado, setSelecionado] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [senha, setSenha] = useState(\"\");\n\n    const API = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/login\";\n\n    const navigate = useNavigate();\n\n\n    function fazerLogin() {\n        setEntrar(loading);\n        setSelecionado(true);\n        const promise = axios.post(API, {\n            email: email,\n            password: senha\n        });\n        promise.then(response => {\n            const { data } = response;\n            console.log(data.token);\n            setToken(data.token);\n            navigate(\"/habitos\"); // mudar depois para tela hoje\n        }\n        )\n        promise.catch(response => {\n            alert(\"Informações incorretas, digite novamente email e senha\");\n            setSelecionado(false);\n            setEntrar(\"Entrar\");\n        })\n    }\n\n    return (\n\n        <Container>            \n            <Logo src={logo}></Logo>\n            <Inputs selecionado={selecionado}>\n                <input type=\"text\" placeholder=\"email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    value={email}>\n                </input>\n                <input type=\"password\" placeholder=\"senha\"\n                    onChange={(e) => setSenha(e.target.value)}\n                    value={senha}>\n                </input>\n            </Inputs>\n            <Login selecionado={selecionado} onClick={fazerLogin}>{entrar}</Login>\n            <Hiperlink onClick={() => navigate(\"/cadastro\")}>\n                Não tem uma conta? Cadastre-se </Hiperlink>\n        </Container>\n\n    )\n}\n\nfunction corBotao(selecionado) {\n    if (selecionado) return \"green\";\n    else return \"blue\";\n}\n\nfunction resetarBotao(selecionado) {\n    if (selecionado) return \"none\";\n    else return \"\";\n}\n\nfunction corInput(selecionado) {\n    if (selecionado) return \"gray\";\n    else return \"white\";\n}\n\nconst Container = styled.div`\n    width: 375px;\n    height: 667px;\n    background-color: pink;\n`\n\nconst Logo = styled.img`\n    margin: 0 98px;\n    margin-top: 68px;\n    margin-bottom: 33px;\n`\n\nconst Inputs = styled.div`\n    input {\n        width: 303px;\n        height: 45px;\n        padding-left: 11px;\n        margin-left: 35px;\n        margin-bottom: 6px;\n        background-color: ${(props) => corInput(props.selecionado)};\n        pointer-events: ${(props) => resetarBotao(props.selecionado)};;\n    }\n    `\n\nconst Login = styled.button`\n    font-size: 22px;\n    color: #FFFFFF;\n    width: 303px;\n    height: 45px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    margin-left: 35px;\n    margin-bottom: 25px;\n    pointer-events: ${(props) => resetarBotao(props.selecionado)};\n    background-color: ${(props) => corBotao(props.selecionado)};\n`\nconst Hiperlink = styled.p`\n`\n\n\nexport default TelaLogin;"]},"metadata":{},"sourceType":"module"}