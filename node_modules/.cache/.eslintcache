[{"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/index.js":"1","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/App.js":"2","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaLogin/index.js":"3","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaCadastro/index.js":"4","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/index.js":"5","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/index.js":"6","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHistorico/index.js":"7","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/contexts/UserContext.js":"8","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/Layout/Header.js":"9","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/InserirHabito.js":"10","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/HabitoSalvo.js":"11","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/HabitoHoje.js":"12","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/Layout/Menu.js":"13","/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/index.js":"14","/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/App.js":"15","/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaLogin/index.js":"16","/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaCadastro/index.js":"17","/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaEntrada/index.js":"18","/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaSaida/index.js":"19","/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaRegistros/index.js":"20","/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/contexts/UserContext.js":"21"},{"size":197,"mtime":1649102228661,"results":"22","hashOfConfig":"23"},{"size":1441,"mtime":1649101837701,"results":"24","hashOfConfig":"23"},{"size":3791,"mtime":1649102188461,"results":"25","hashOfConfig":"23"},{"size":4512,"mtime":1649102145161,"results":"26","hashOfConfig":"23"},{"size":4525,"mtime":1649096812813,"results":"27","hashOfConfig":"23"},{"size":2983,"mtime":1649102006225,"results":"28","hashOfConfig":"23"},{"size":927,"mtime":1649100211463,"results":"29","hashOfConfig":"23"},{"size":105,"mtime":1648671169198,"results":"30","hashOfConfig":"23"},{"size":837,"mtime":1649092570290,"results":"31","hashOfConfig":"23"},{"size":7374,"mtime":1649102093341,"results":"32","hashOfConfig":"23"},{"size":2893,"mtime":1649094128072,"results":"33","hashOfConfig":"23"},{"size":5012,"mtime":1649101940026,"results":"34","hashOfConfig":"23"},{"size":1987,"mtime":1649100677009,"results":"35","hashOfConfig":"23"},{"size":197,"mtime":1649102228661,"results":"36","hashOfConfig":"37"},{"size":1107,"mtime":1651850952754,"results":"38","hashOfConfig":"37"},{"size":2939,"mtime":1651850626155,"results":"39","hashOfConfig":"37"},{"size":3466,"mtime":1651804847936,"results":"40","hashOfConfig":"37"},{"size":1090,"mtime":1651682749027,"results":"41","hashOfConfig":"37"},{"size":98,"mtime":1651673015223,"results":"42","hashOfConfig":"37"},{"size":111,"mtime":1651673116084,"results":"43","hashOfConfig":"37"},{"size":105,"mtime":1651850326139,"results":"44","hashOfConfig":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pfg9cw",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iz7dk8",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/App.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaLogin/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaCadastro/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/index.js",["113"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Header from \"../Layout/Header\";\nimport HabitoSalvo from \"./HabitoSalvo\";\nimport InserirHabito from \"./InserirHabito\";\nimport Menu from \"../Layout/Menu\";\n\nfunction TelaHabitos() {\n\n    const tokenLS = localStorage.getItem(\"token\");\n\n    const [dadosHabito, setDadosHabito] = useState([]);\n\n    /* Os dois estados abaixo foram criados aqui e passados para os filhos, assim\n    o input mantém os dados digitados enquanto não for enviado para a API */\n\n    // Estado criado que salva o hábito digitado no input\n    const [habito, setHabito] = useState();\n\n    // Mapa criado que armazena os dias da semana clicados na construção do hábito\n    const [diasSelecionados, setDiasSelecionados] = useState(new Map());\n\n    const API = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits\";\n\n    const config = {\n        headers: {\n            \"Authorization\": `Bearer ${tokenLS}`\n        }\n    }\n\n    useEffect(() => {\n        const promise = axios.get(API, config);\n        promise.then(response => {\n            const { data } = response;\n            setDadosHabito(data);\n        });\n        promise.catch(err => alert(err.response.statusText));\n    }, []);\n\n    const [visivel, setVisivel] = useState(false);\n\n        return (\n            <>\n                <Header />\n                {visivel ?\n                    <Container>\n                        <Subtitle>\n                            <h1>Meus habitos</h1>\n                            <button>+</button>\n                        </Subtitle>\n                        <InserirHabito setVisivel={setVisivel}\n                            habito={habito} setHabito={setHabito}\n                            diasSelecionados={diasSelecionados}\n                            setDiasSelecionados={setDiasSelecionados}\n                        />\n                        {dadosHabito.map(dado => {\n                            return (\n                                <HabitoSalvo key={dado.id} id={dado.id} habito={dado.name}\n                                    dias={dado.days} />\n                            )\n                        })}\n                        {dadosHabito.length > 0 ?\n                            <></> :\n                            <Message>\n                                Você não tem nenhum hábito cadastrado ainda. Adicione um hábito para começar a trackear!\n                            </Message>\n                        }\n                    </Container>\n                    :\n                    <Container>\n                        <Subtitle>\n                            <h1>Meus habitos</h1>\n                            <button onClick={() => setVisivel(true)}>+</button>\n                        </Subtitle>\n                        {dadosHabito.map(dado => {\n                            return (\n                                <HabitoSalvo key={dado.id} id={dado.id} habito={dado.name}\n                                    dias={dado.days} />\n                            )\n                        })}\n                        {dadosHabito.length > 0 ?\n                            <></> :\n                            <Message>\n                                Você não tem nenhum hábito cadastrado ainda. Adicione um hábito para começar a trackear!\n                            </Message>\n                        }\n                    </Container>\n                }\n                <Menu />\n            </>\n        )\n}\n\nconst Container = styled.div`\n    background-color: #E5E5E5;\n    width: 375px;\n    min-height: 667px;\n    height: 100%;\n    padding-bottom: 100px;\n    margin-top: 70px;\n    margin-bottom: 70px;\n        p {\n            font-size: 18px;\n            padding-left: 17px;\n            padding-right: 20px;\n        }\n    `\nconst Subtitle = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 22px;\n    padding-bottom: 28px;\n\n        h1 {\n            font-size: 23px;\n            color: var(--cor-subtitulo);\n            padding-left: 17px;\n        }\n\n        button {\n            font-size: 27px;\n            color: white;\n            width: 40px;\n            heigth: 35px;\n            border-radius: 5px;\n            margin-right: 18px;\n            background-color: var(--cor-azul-claro)\n        }\n`\nconst Message = styled.p`\n        font-size: 18px;\n        color: var(--cor-cinza-letras)\n        margin-top: 30px;\n`\nexport default TelaHabitos;",["114","115"],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/index.js",["116"],[],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHistorico/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/contexts/UserContext.js",[],[],["117","118"],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/Layout/Header.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/InserirHabito.js",["119","120"],[],"import { useState, useContext } from \"react\";\nimport UserContext from \"../contexts/UserContext\";\nimport axios from \"axios\";\nimport { ThreeDots } from  'react-loader-spinner';\nimport styled from \"styled-components\";\n\nfunction InserirHabito(props) {\n\n    const loading = <ThreeDots color=\"#FFFFFF\" />;\n\n    const {setVisivel, habito, setHabito, \n    diasSelecionados, setDiasSelecionados} = props;\n\n    const { token, setToken } = useContext(UserContext);\n\n    const tokenLS = localStorage.getItem(\"token\");\n    \n    const config = {\n        headers: {\n            \"Authorization\": `Bearer ${tokenLS}`\n        }\n    }\n\n    const APIPost = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits\";\n\n    // Estado criado para colocar a animação de loading no botão de salvar\n    const [salvar, setSalvar] = useState(\"Salvar\");\n\n    // Estado criado para desabilitar o botão enquanto a pagina está carregando\n    const [selecionado, setSelecionado] = useState(false);\n\n    // Lista para fazer um map dos dias da semana e seus ids\n    const dias = [{ dia: \"D\", id: 0 }, { dia: \"S\", id: 1 }, { dia: \"T\", id: 2 },\n    { dia: \"Q\", id: 3 }, { dia: \"Q\", id: 4 }, { dia: \"S\", id: 5 }, { dia: \"S\", id: 6 },]\n\n    // Estado usado para esconder a tela de criar hábitos ao clicar no botão cancelar\n    const [cancelarHabito, setCancelarHabito] = useState(false);\n\n    function selecionarDia(dia, id) {\n        const jaSelecionado = diasSelecionados.has(id); // Pergunta pro meu estado se ele já tem esse id, retorna true ou false\n        if (jaSelecionado) { // Se eu já tinha selecionado e clicar de novo\n            diasSelecionados.delete(id); // eu preciso tirar o id do mapa\n            setDiasSelecionados(new Map(diasSelecionados)); // atualizo o mapa sem o id que acabei de clicar\n        }\n        else { // Se eu estou clicando pela primeira vez\n            setDiasSelecionados(new Map(diasSelecionados.set(id, dia)));\n            // atualizo o mapa colocando as informações do id e do dia nele.\n        }\n    }\n/* Função criada para colocar os estados em condição de esconder a tela de \ncriar hábitos e reabilitar o botão de + no componente pai de inserir hábitos */\n    function resetarHabito() {\n        setCancelarHabito(true);\n        setVisivel(false);\n    }\n\n/* Função criada para zerar os inputs no caso do hábito ter sido salvo com sucesso */\n    function zerarInputs () {\n        setHabito();\n        setDiasSelecionados(new Map());\n    }\n\n/* Função que faz o post para o servidor do hábito criado, e também faz o efeito\nde cancelar, para colocar a tela no estado inicial */\n    function salvarHabito() {\n        setSalvar(loading);\n        setSelecionado(true);\n        const promise = axios.post(APIPost, {\n            name: habito,\n            days: [...diasSelecionados.keys()] // Pega apenas os ids do mapa\n        }, config);\n        promise.then(response => {\n            resetarHabito();\n            zerarInputs();\n            window.location.reload();\n        })\n        promise.catch(response => {\n            alert(\"Falha no envio dos dados, por favor tente novamente\");\n            resetarHabito();\n        })\n    }\n    \n    // COLOCAR O FORM COM REQUIRED NESSE INPUT\n    return (\n        <>\n            {cancelarHabito ?\n                <></> :\n                <Container selecionado={selecionado}>\n                    <input type=\"text\" placeholder=\"nome do hábito\"\n                        onChange={(e) => setHabito(e.target.value)}\n                        value={habito}>\n                    </input>\n                    <Days>\n                        {dias.map(dia => {\n                            const checkSelecionado = diasSelecionados.has(dia.id)\n                            // Meus dias selecionados tem esse id? Lembrando que o id é iterado\n                            // Cada vez que clico em um dia, o estado é alterado, então o componente é novamente renderizado.\n                            // Ao clicar, eu atualizo meu mapa, então esse if vai achar o id no mapa\n                            // Ao achar o id no mapa, vai alterar a prop abaixo de selecionado para true\n                            return (\n                                <DayWeek key={dia.id} selecionado={checkSelecionado} onClick={() => selecionarDia(dia.dia, dia.id)}>\n                                    {dia.dia}\n                                </DayWeek>)\n                        }\n                        )}\n                    </Days>\n                    <Actions>\n                        <Cancelar onClick={() => resetarHabito()}>Cancelar</Cancelar>\n                        <Button selecionado={selecionado} onClick={() => salvarHabito()}>{salvar}</Button>\n                    </Actions>\n                </Container>\n            }\n        </>\n    )\n}\n\n/* Função que responde a um determinado estado vindo do mapa por props que vai alterar\na cor do botão ao clicar no dia da semana, a cor depende apenas do estado */\nfunction corBotao(selecionado) {\n    if (selecionado) return \"var(--cor-cinza-dias)\";\n    else return \"#FFFFFF\";\n}\n\nfunction mudarBotao(selecionado) {\n    if (selecionado) return \"0.7\";\n    else return \"1\";\n}\n\nfunction resetarBotao (selecionado) {\n    if (selecionado === true) return \"none\";\n    else return \"display\";\n}\n\nfunction corInput(selecionado) {\n    if (selecionado) return \"var(--cor-cinza-check)\";\n    else return \"#FFFFFF\";\n}\n\nconst Container = styled.div`\n    width: 340px;\n    min-height: 180px;\n    border-radius: 5px;\n    margin: 0 auto;\n    margin-bottom: 28px;\n    background-color: #FFFFFF;\n\n        input {\n            width: 303px;\n            height: 45px;\n            font-size: 20px;\n            color: var(--cor-cinza-letras);\n            border-radius: 5px;\n            border: 1px solid var(--cor-cinza-borda);\n            margin: 0 19px;\n            margin-top: 18px;\n            margin-bottom: 10px;\n            padding-left: 11px;\n            background-color: ${(props) => corInput(props.selecionado)};\n            pointer-events: ${(props) => resetarBotao(props.selecionado)};;\n        }\n`\nconst Days = styled.div`\n     display: flex;\n     gap: 4px;\n     margin-left: 19px;\n`\nconst DayWeek = styled.button`\n    font-size: 19px;\n    color: var(--cor-cinza-borda);\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    border: 1px solid var(--cor-cinza-borda);\n    background-color: ${(props) => corBotao(props.selecionado)}; \n`\n// Essa props selecionado serve para ver se eu cliquei ou não no dia\n// Quando o botão é clicado, ele chama essa função pata alterar a cor dependendo do clique.\n\nconst Actions = styled.div`\n    display: flex;\n    justify-content: right;\n    align-items: center;\n    padding-top: 29px;\n    padding-right: 16px;\n`\nconst Button = styled.button`\n    font-size: 16px;\n    color: #FFFFFF;\n    width: 84px;\n    height: 35px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    border: var(--cor-azul-claro)\n    margin-left: 10px;\n    background-color: var(--cor-azul-claro);\n    opacity: ${(props) => mudarBotao(props.selecionado)};\n    pointer-events: ${(props) => resetarBotao(props.selecionado)}; \n`\nconst Cancelar = styled.p`\n    font-size: 16px;\n    color: var(--cor-azul-claro);\n`\nexport default InserirHabito;","/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHabitos/HabitoSalvo.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/TelaHoje/HabitoHoje.js",["121"],[],"/home/mauricio/Documentos/Driven/Projetos/projeto10-trackit/src/Componentes/Layout/Menu.js",[],[],["122","123"],"/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/App.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaLogin/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaCadastro/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaEntrada/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaSaida/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/TelaRegistros/index.js",[],[],"/home/mauricio/Documentos/Driven/Projetos/projeto13-mywallet-front/src/Componentes/contexts/UserContext.js",[],[],{"ruleId":"124","severity":1,"message":"125","line":39,"column":8,"nodeType":"126","endLine":39,"endColumn":10,"suggestions":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"124","severity":1,"message":"132","line":44,"column":8,"nodeType":"126","endLine":44,"endColumn":10,"suggestions":"133"},{"ruleId":"128","replacedBy":"134"},{"ruleId":"130","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":14,"column":13,"nodeType":"138","messageId":"139","endLine":14,"endColumn":18},{"ruleId":"136","severity":1,"message":"140","line":14,"column":20,"nodeType":"138","messageId":"139","endLine":14,"endColumn":28},{"ruleId":"136","severity":1,"message":"141","line":58,"column":21,"nodeType":"138","messageId":"139","endLine":58,"endColumn":31},{"ruleId":"128","replacedBy":"142"},{"ruleId":"130","replacedBy":"143"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.","ArrayExpression",["144"],"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"React Hook useEffect has missing dependencies: 'config' and 'setHabitosHoje'. Either include them or remove the dependency array.",["147"],["145"],["146"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","'setRecorde' is assigned a value but never used.",["145"],["146"],{"desc":"148","fix":"149"},"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [config]",{"range":"152","text":"153"},"Update the dependencies array to be: [config, setHabitosHoje]",{"range":"154","text":"155"},[1279,1281],"[config]",[1290,1292],"[config, setHabitosHoje]"]